name: Terraform CI

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - "**/*.tftpl"
  issue_comment:
    types: [created, edited]

# Disable permissions for all available scopes.
permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.repository }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash
    #TODO: Move this to job level if using matrix
    working-directory: ./terraform/development

jobs:
  test-terraform:
    if: ${{ github.event_name == 'pull_request' }}
    name: Test Terraform
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      id-token: write
      pull-requests: write
    #TODO: Use matrix for different environments
    environment: development

    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      # AWS Credentials required for tflint deep check
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: us-east-1
          mask-aws-account-id: true
          #TODO: Secrets will need renaming if using matrix for environments. eg AWS_${{ matrix.environment }}_OIDC_ROLE_ARN
          role-to-assume: ${{ secrets.AWS_DEV_OIDC_ROLE_ARN }}
          role-session-name: tflint-deep-check

      - name: Cache TFLint plugin directory
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: .trunk/plugins/
          key: ${{ runner.os }}-${{ github.repository }}-tflint-${{ hashFiles('.trunk/configs/.tflint_ci.hcl') }}

      # Run terraform format
      - name: Terraform fmt
        id: tf-fmt
        run: terraform fmt -check
        continue-on-error: true

      # Initialise terraform in the directory where terraform file have changed.
      - name: Initialise terraform
        id: tf-init
        run: |
          terraform init -backend=false

      # Run terraform validate
      - name: Terraform validate
        id: tf-validate
        run: terraform validate -no-color
        continue-on-error: true

      - name: Add PR comment on terraform failure
        if: ${{ steps.tf-fmt.outputs.exitcode != 0 || steps.tf-validate.outputs.exitcode != 0 }}
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
        with:
          header: Terraform validation error
          hide_and_recreate: true
          hide_classify: OUTDATED
          message: |
            #### Terraform Format and Style ${{ steps.tf-fmt.outcome }} :x:

            ${{ steps.tf-fmt.outputs.stdout }}

            #### Terraform Validation ${{ steps.tf-validate.outcome }} :x:

            ```
            ${{ steps.tf-validate.outputs.stderr }}
            ```

            Resolve these issues and commit your changes to trigger another deployment.

      - name: Terraform error
        if: ${{ steps.tf-fmt.outputs.exitcode != 0 || steps.tf-validate.outputs.exitcode != 0 }}
        run: |
          exit 1

      # Install TFLint; required to download plugins
      - name: Install TFLint
        uses: terraform-linters/setup-tflint@15ef44638cb215296e7ba9e7a41f20b5b06f4784 # v4.0.0
        with:
          tflint_version: v0.53.0
          tflint_wrapper: true

      # Initialise TFLint using the configuration file for CI in the trunk directory
      # The CI configuration enables deep check
      - name: Initialise TFLint
        run: |
          tflint --init --config=$GITHUB_WORKSPACE/.trunk/configs/.tflint_ci.hcl

      - name: Run TFLint
        id: tflint
        run: |
          tflint --config=$GITHUB_WORKSPACE/.trunk/configs/.tflint_ci.hcl --format compact
        continue-on-error: true

      - name: Add PR comment on TFLint failure
        if: ${{ steps.tflint.outputs.exitcode != 0 }}
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
        with:
          header: TLint error
          hide_and_recreate: true
          hide_classify: OUTDATED
          message: |
            #### TFLint failure :x:

            ```
            ${{ steps.tflint.outputs.stdout }}
            ```

            Resolve these issues and commit your changes to trigger another deployment.

      - name: TFLint error
        if: ${{ steps.tflint.outputs.exitcode != 0 }}
        run: |
          exit 1

      # Run Trunk Check without terraform and tflint due to deep check issue
      - name: Trunk Check
        uses: trunk-io/trunk-action@2eaee169140ec559bd556208f9f99cdfdf468da8 # v1.1.17
        with:
          arguments: --filter checkov,trivy

      - name: Add PR comment for Test success
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
        with:
          header: TF Success
          message: |
            #### Terraform Format and Style ${{ steps.tf-fmt.outcome }} :white_check_mark:
            #### Terraform Validation ${{ steps.tf-validate.outcome }} :white_check_mark:
            #### TFLint ${{ steps.tf-validate.outcome }} :white_check_mark:

  plan-and-apply:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: [test-terraform]
    if: |
      always() &&
      github.event_name == 'pull_request' && needs.test-terraform.result == 'success' ||
      github.event.issue.pull_request && contains(github.event.comment.body, 'terraform plan approved') && needs.test-terraform.result == 'skipped'
    permissions:
      actions: read # Required to download repository artifact.
      checks: write # Required to add status summary.
      contents: read # Required to checkout repository.
      id-token: write # Required to authenticate via OIDC.
      pull-requests: write # Required to add PR comment and label.
    environment: development
    env:
      TF_TOKEN_APP_TERRAFORM_IO: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
      APPLY_TRIGGER: ${{ github.event.issue.pull_request && contains(github.event.comment.body, 'terraform plan approved') }}

    steps:
      # - name: Set environment variables
      #   # Replace '/' with '-' Most things like dashes and do not like forward slashes
      #   run: |
      #     echo "REPOSITORY=$(echo ${{ github.repository }} | tr / -)" >> "$GITHUB_ENV"

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_DEV_OIDC_ROLE_ARN }}
          # $REPOSITORY, as described in the github docs, does not work
          role-session-name: gitops2024-development-terraform-deploy

      - name: Terraform
        uses: devsectop/tf-via-pr@cc83c7bae8216e747bb8c074524665b2416822f5 # v11.4.6
        with:
          arg_chdir: terraform/development
          arg_command: ${{ env.APPLY_TRIGGER && 'apply' || 'plan' }}
          arg_lock: ${{ env.APPLY_TRIGGER && 'true' || 'false' }}
          plan_parity: ${{ env.APPLY_TRIGGER && 'true' || 'false' }}

      - name: Assign approval label
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "approval required"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Assign approved label
        run: >
          ${{ env.APPLY_TRIGGER }} &&
          gh pr edit ${{ github.event.pull_request.number }} --add-label "approved" --remove-label "approval required" ||
          gh pr edit ${{ github.event.pull_request.number }} --add-label "approval rejected" --remove-label "approval required" }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # This plan should not produce a diff
      - name: Check idempotency
        if: ${{ env.APPLY_TRIGGER }}
        id: idempotency
        uses: devsectop/tf-via-pr@cc83c7bae8216e747bb8c074524665b2416822f5 # v11.4.6
        with:
          arg_chdir: terraform/development
          arg_command: plan
          arg_lock: false
          arg_detailed_exitcode: true
          arg_out: tfplan-${{ github.head_ref}}-PR${{ github.event.pull_request.number}}-check # Give this plan a different name

      - name: Add PR comment terraform diff
        if: ${{ steps.idempotency.outputs.exitcode != 0 }}
        uses: marocchino/sticky-pull-request-comment@331f8f5b4215f0445d3c07b4967662a32a2d3e31 # v2.9.0
        with:
          header: Diff Error
          message: |
            ####  ${{ github.workflow }} detected a diff during deployment to the development environment

            Please resolve the error and commit your changes to re-run the workflow.

            ${{ github.workflow }} workflow run: [${{ github.run_id }}](https://github.com/3ware/gitops-2024/actions/runs/${{ github.run_id }})

      - name: Diff Error
        if: ${{ steps.idempotency.outputs.exitcode != 0 }}
        run: |
          exit 1
